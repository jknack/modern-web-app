<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.knowhow</groupId>
  <artifactId>modern-web-app</artifactId>
  <packaging>pom</packaging>
  <version>0.1.1</version>
  <name>A Modern Web App Archicture</name>

  <modules>
    <module>mwa-core</module>
    <module>mwa-validation</module>
    <module>mwa-jpa</module>
    <module>mwa-mongo</module>
    <module>mwa-morphia</module>
    <module>mwa-view</module>
    <module>mwa-mustache</module>
    <module>mwa-wro4j</module>
    <module>mwa-logging</module>
  </modules>

  <prerequisites>
    <maven>3.0</maven>
  </prerequisites>

  <dependencyManagement>
    <dependencies>
      <!-- Servlet API -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet-api-version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- Spring -->
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>${javax.inject-version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring-version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring-version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring-version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring-version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${spring-version}</version>
      </dependency>

      <!-- Spring Data & Mongo -->
      <dependency>
        <groupId>org.mongodb</groupId>
        <artifactId>mongo-java-driver</artifactId>
        <version>${mongo-java-driver-version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-mongodb</artifactId>
        <version>${spring-data-version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.morphia</groupId>
        <artifactId>morphia</artifactId>
        <version>${morphia-version}</version>
      </dependency>

      <!-- Jackson -->
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>${jackson-version}</version>
      </dependency>

      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>${cglib-version}</version>
      </dependency>

      <!-- Hibernate JPA -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${hibernate-version}</version>
      </dependency>

      <dependency>
        <groupId>com.jolbox</groupId>
        <artifactId>bonecp</artifactId>
        <version>${bonecp-version}</version>
      </dependency>

      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql-connector-java-version}</version>
      </dependency>

      <dependency>
        <groupId>com.mysema.querydsl</groupId>
        <artifactId>querydsl-apt</artifactId>
        <version>${querydsl-version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.mysema.querydsl</groupId>
        <artifactId>querydsl-jpa</artifactId>
        <version>${querydsl-version}</version>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
          <exclusion>
            <groupId>net.sourceforge.findbugs</groupId>
            <artifactId>jsr305</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate-validator-version}</version>
      </dependency>

      <!-- Logging System -->
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${commons-logging-version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j-version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j-version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j-version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j-version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback-version}</version>
      </dependency>

      <!-- Facade over existing loggings -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j-version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j-version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j-version}</version>
      </dependency>

      <!-- File upload support -->
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>${commons-fileupload-version}</version>
      </dependency>

      <!-- commons-io -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io-version}</version>
      </dependency>

      <!-- commons-lang3 -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3-version}</version>
      </dependency>

      <!-- commons-collections -->
      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>${commons-collections-version}</version>
      </dependency>

      <!-- Google Guava -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava-version}</version>
      </dependency>

      <!-- Mustache: Template Engine -->
      <dependency>
        <groupId>com.github.spullara.mustache.java</groupId>
        <artifactId>compiler</artifactId>
        <version>${mustache.java-version}</version>
      </dependency>

      <!-- Web Resource Optimizer -->
      <dependency>
        <groupId>ro.isdc.wro4j</groupId>
        <artifactId>wro4j-extensions</artifactId>
        <version>${wro4j-version}</version>
      </dependency>

      <!-- TODO: move embedded db driver to test deps -->
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2-version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit-version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock-version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-easymock</artifactId>
        <version>${powermock-version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock-version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring-version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <!-- We enable all these plugins by default. -->
      <id>development</id>
      <activation>
        <file>
          <exists>pom.xml</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <!-- We're on 1.6 -->
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler-plugin-version}</version>
            <configuration>
              <source>1.6</source>
              <target>1.6</target>
            </configuration>
          </plugin>

          <!-- Source code -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin-version}</version>
          </plugin>

          <!-- Enforcer: Java6 and Maven-2.2.x -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>${maven-enforcer-plugin-version}</version>
          </plugin>

          <!-- Surefire: unit test -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin-version}</version>
          </plugin>

          <!-- War plugin -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>${maven-war-plugin-version}</version>
            <configuration>
              <failOnMissingWebXml>false</failOnMissingWebXml>
              <packagingExcludes>
                WEB-INF/classes/application.properties,
                WEB-INF/classes/logback-test.xml,
                WEB-INF/classes/logback.xml,
                WEB-INF/classes/${project.artifactId}.properties,
                <!-- Exclude JCL and LOG4J since all logging should go through SLF4J. 
                  Note that we're excluding log4j-<version>.jar but keeping log4j-over-slf4j-<version>.jar -->
                WEB-INF/lib/commons-logging-*.jar,
                %regex[WEB-INF/lib/log4j-(?!over-slf4j).*.jar]
              </packagingExcludes>
            </configuration>
          </plugin>

          <!-- Jetty Setup for development -->
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <version>${jetty-maven-plugin-version}</version>
            <configuration>
              <webApp>
                <contextPath>/${project.artifactId}</contextPath>
              </webApp>
            </configuration>
          </plugin>

          <!-- Tomcat setup for development -->
          <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <version>${tomcat-maven-plugin-version}</version>
            <configuration>
              <port>8080</port>
              <path>/${project.artifactId}</path>
              <uriEncoding>${project.build.sourceEncoding}</uriEncoding>
              <charset>${project.build.sourceEncoding}</charset>
            </configuration>
          </plugin>

          <!-- Eclipse setup -->
          <plugin>
            <!-- Let's make the life easier and use the proper tool -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <!-- Our custom version publish test resources in dev mode. -->
            <version>${maven-eclipse-plugin-version}</version>
            <configuration>
              <wtpversion>2.0</wtpversion>
              <downloadSources>true</downloadSources>
              <excludes>
                <!-- A test classpath free of logging issues. -->
                <exclude>commons-logging:commons-logging</exclude>
                <exclude>log4j:log4j</exclude>
                <exclude>org.slf4j:slf4j-log4j12</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Code Quality -->
    <profile>
      <id>code-quality</id>
      <activation>
        <file>
          <exists>${basedir}/src/etc/modules/checkstyle.xml</exists>
        </file>
      </activation>
      <properties>
        <checkstyle-file>${basedir}/src/etc/modules/checkstyle.xml</checkstyle-file>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${maven-checkstyle-plugin-version}</version>
            <configuration>
              <consoleOutput>true</consoleOutput>
              <configLocation>${checkstyle-file}</configLocation>
              <failsOnError>true</failsOnError>
            </configuration>
            <executions>
              <execution>
                <id>checkstyle</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>checkstyle</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- QueryDSL for JPA -->
    <profile>
      <id>querydsl-jpa</id>
      <activation>
        <file>
          <exists>${basedir}/src/etc/modules/querydsl-jpa</exists>
        </file>
      </activation>
      <properties>
        <querydsl-jpa-apt-file>querydsl-jpa-${querydsl-version}-apt-one-jar.jar</querydsl-jpa-apt-file>
        <querydsl-jpa-apt-remote-file>http://repo1.maven.org/maven2/com/mysema/querydsl/querydsl-jpa/${querydsl-version}/${querydsl-jpa-apt-file}</querydsl-jpa-apt-remote-file>
        <querydsl-jpa-apt-dir>${settings.localRepository}/com/mysema/querydsl/querydsl-jpa/${querydsl-version}</querydsl-jpa-apt-dir>
        <querydsl-jpa-apt-path>${querydsl-jpa-apt-dir}/${querydsl-jpa-apt-file}</querydsl-jpa-apt-path>
        <querydsl-jpa-output-dir>target/querydsl-jpa</querydsl-jpa-output-dir>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>get-querydsl-jpa-apt-file</id>
                <phase>generate-sources</phase>
                <configuration>
                  <target>
                    <mkdir dir="${querydsl-jpa-apt-dir}" />
                    <get src="${querydsl-jpa-apt-remote-file}" dest="${querydsl-jpa-apt-path}"
                      usetimestamp="true" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <id>add-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${querydsl-jpa-output-dir}</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.knowhow</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <configuration>
              <additionalConfig>
                <file>
                  <name>.factorypath</name>
                  <content><![CDATA[<factorypath>
  <factorypathentry kind="EXTJAR" id="${querydsl-jpa-apt-path}" enabled="true" runInBatchMode="false"/>
</factorypath>
  ]]>
                  </content>
                </file>
                <file>
                  <name>.settings/org.eclipse.jdt.apt.core.prefs</name>
                  <content><![CDATA[
  eclipse.preferences.version=1
org.eclipse.jdt.apt.aptEnabled=true
org.eclipse.jdt.apt.genSrcDir=${querydsl-jpa-output-dir}
org.eclipse.jdt.apt.reconcileEnabled=true
org.eclipse.jdt.apt.processorOptions/defaultOverwrite=true
   ]]>
                  </content>
                </file>
              </additionalConfig>
            </configuration>
          </plugin>

          <!-- Query DSL -->
          <plugin>
            <groupId>com.mysema.maven</groupId>
            <artifactId>maven-apt-plugin</artifactId>
            <version>${maven-apt-plugin-version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>process</goal>
                </goals>
                <configuration>
                  <outputDirectory>${querydsl-jpa-output-dir}</outputDirectory>
                  <processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
                  <logOnlyOnError>true</logOnlyOnError>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>com.mysema.querydsl</groupId>
                <artifactId>querydsl-apt</artifactId>
                <version>${querydsl-version}</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!-- Query DSL -->
        <dependency>
          <groupId>com.mysema.querydsl</groupId>
          <artifactId>querydsl-jpa</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>morphia</id>
      <url>http://morphia.googlecode.com/svn/mavenrepo/</url>
    </repository>
  </repositories>

  <properties>
    <spring-version>3.1.1.RELEASE</spring-version>
    <spring-data-version>1.0.1.RELEASE</spring-data-version>
    <hibernate-version>4.1.2.Final</hibernate-version>
    <hibernate-validator-version>4.3.0.Beta1</hibernate-validator-version>
    <jackson-version>1.9.5</jackson-version>
    <logback-version>1.0.0</logback-version>
    <slf4j-version>1.6.4</slf4j-version>
    <servlet-api-version>3.0.1</servlet-api-version>
    <javax.inject-version>1</javax.inject-version>
    <cglib-version>2.2.2</cglib-version>
    <bonecp-version>0.7.1.RELEASE</bonecp-version>
    <mysql-connector-java-version>5.1.18</mysql-connector-java-version>
    <commons-logging-version>1.1.1</commons-logging-version>
    <log4j-version>1.2.16</log4j-version>
    <commons-fileupload-version>1.2.2</commons-fileupload-version>
    <commons-io-version>2.0.1</commons-io-version>
    <h2-version>1.3.164</h2-version>
    <derby-version>10.8.2.2</derby-version>
    <junit-version>4.10</junit-version>
    <easymock-version>3.1</easymock-version>
    <powermock-version>1.4.11</powermock-version>
    <commons-lang3-version>3.1</commons-lang3-version>
    <commons-collections-version>3.2</commons-collections-version>
    <guava-version>11.0</guava-version>
    <mustache.java-version>0.7.3</mustache.java-version>
    <querydsl-version>2.3.3</querydsl-version>
    <mongo-java-driver-version>2.7.3</mongo-java-driver-version>
    <morphia-version>0.99</morphia-version>
    <wro4j-version>1.4.4</wro4j-version>

    <!-- Encoding UTF-8 -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Maven plugins -->
    <maven-compiler-plugin-version>2.3.2</maven-compiler-plugin-version>
    <maven-source-plugin-version>2.1.2</maven-source-plugin-version>
    <maven-enforcer-plugin-version>1.0.1</maven-enforcer-plugin-version>
    <maven-surefire-plugin-version>2.12</maven-surefire-plugin-version>
    <maven-eclipse-plugin-version>2.9</maven-eclipse-plugin-version>
    <maven-war-plugin-version>2.2</maven-war-plugin-version>
    <maven-checkstyle-plugin-version>2.9.1</maven-checkstyle-plugin-version>
    <maven-apt-plugin-version>1.0.2</maven-apt-plugin-version>
    <jetty-maven-plugin-version>8.1.3.v20120416</jetty-maven-plugin-version>
    <tomcat-maven-plugin-version>2.0-beta-1</tomcat-maven-plugin-version>
    <findbugs-maven-plugin-version>2.4.0</findbugs-maven-plugin-version>

    <!-- Maven Global properties -->
    <maven.build.timestamp.format>yyyyMMdd.hhmmss</maven.build.timestamp.format>
    <buildDate>${maven.build.timestamp}</buildDate>
  </properties>
  <url>https://github.com/edgarespina/modern-web-app</url>

  <scm>
    <connection>scm:git:git://github.com:edgarespina/modern-web-app.git</connection>
    <developerConnection>scm:git:git://github.com:edgarespina/modern-web-app.git</developerConnection>
    <url>scm:git:git://github.com:edgarespina/modern-web-app.git</url>
  </scm>
</project>
